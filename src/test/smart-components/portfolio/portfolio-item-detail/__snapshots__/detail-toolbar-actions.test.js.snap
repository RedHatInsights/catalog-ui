// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DetailToolbarActions /> should render correctly 1`] = `
<DetailToolbarActions
  availability="available"
  copyUrl="foo/copy"
  editSurveyUrl="foo/edit-survey"
  editUrl="foo/baz"
  isFetching={false}
  isOpen={false}
  orderUrl="foo/bar"
  pathname="foo/bar"
  setOpen={[MockFunction]}
  userCapabilities={
    Object {
      "copy": true,
      "set_approval": true,
      "update": true,
    }
  }
  workflowUrl="foo/workflow"
>
  <LevelItem>
    <div>
      <CatalogLink
        isDisabled={false}
        nav={false}
        pathname="foo/bar"
        preserveHash={false}
        preserveSearch={true}
        searchParams={Object {}}
      >
        <Styled(Component)
          isDisabled={false}
          to={
            Object {
              "hash": undefined,
              "pathname": "foo/bar",
              "search": "",
            }
          }
        >
          <Component
            className="sc-AxiKw drCTeX"
            isDisabled={false}
            to={
              Object {
                "hash": undefined,
                "pathname": "foo/bar",
                "search": "",
              }
            }
          >
            <Link
              className="sc-AxiKw drCTeX"
              to={
                Object {
                  "hash": undefined,
                  "pathname": "foo/bar",
                  "search": "",
                }
              }
            >
              <LinkAnchor
                className="sc-AxiKw drCTeX"
                href="foo/bar"
                navigate={[Function]}
              >
                <a
                  className="sc-AxiKw drCTeX"
                  href="foo/bar"
                  onClick={[Function]}
                >
                  <ButtonWithSpinner
                    id="order-portfolio-item"
                    isDisabled={false}
                    showSpinner={false}
                    variant="primary"
                  >
                    <Styled(Button)
                      id="order-portfolio-item"
                      isDisabled={false}
                      variant="primary"
                    >
                      <Button
                        className="sc-AxjAm jhCAUI"
                        id="order-portfolio-item"
                        isDisabled={false}
                        variant="primary"
                      >
                        <button
                          aria-disabled={false}
                          aria-label={null}
                          className="pf-c-button pf-m-primary sc-AxjAm jhCAUI"
                          data-ouia-component-id={0}
                          data-ouia-component-type="PF4/Button"
                          data-ouia-safe={true}
                          disabled={false}
                          id="order-portfolio-item"
                          type="button"
                        >
                          <styled.span
                            showSpinner={false}
                          >
                            <span
                              className="sc-AxirZ fnlrkz"
                            >
                              Order
                            </span>
                          </styled.span>
                        </button>
                      </Button>
                    </Styled(Button)>
                  </ButtonWithSpinner>
                </a>
              </LinkAnchor>
            </Link>
          </Component>
        </Styled(Component)>
      </CatalogLink>
    </div>
  </LevelItem>
  <LevelItem
    style={
      Object {
        "marginLeft": 16,
      }
    }
  >
    <div
      style={
        Object {
          "marginLeft": 16,
        }
      }
    >
      <Dropdown
        dropdownItems={
          Array [
            <DropdownItem
              aria-label="Edit Portfolio"
              component={
                <CatalogLink
                  nav={false}
                  pathname="foo/baz"
                  preserveHash={false}
                  preserveSearch={true}
                  searchParams={Object {}}
                >
                  Edit
                </CatalogLink>
              }
              id="edit-portfolio-item"
              role="link"
            />,
            <DropdownItem
              aria-label="Copy Portfolio"
              component={
                <CatalogLink
                  nav={false}
                  pathname="foo/copy"
                  preserveHash={false}
                  preserveSearch={true}
                  searchParams={Object {}}
                >
                  Copy
                </CatalogLink>
              }
              id="copy-portfolio-item"
              role="link"
            />,
            <DropdownItem
              aria-label="Set approval"
              component={
                <CatalogLink
                  nav={false}
                  pathname="foo/workflow"
                  preserveHash={false}
                  preserveSearch={true}
                  searchParams={Object {}}
                >
                  Set approval
                </CatalogLink>
              }
              id="set-approval_workflow"
              role="link"
            />,
            <DropdownItem
              aria-label="Edit survey"
              component={
                <CatalogLink
                  nav={false}
                  pathname="foo/edit-survey"
                  preserveHash={false}
                  preserveSearch={true}
                  searchParams={Object {}}
                >
                  Edit survey
                </CatalogLink>
              }
              id="edit-survey"
              role="link"
            />,
          ]
        }
        isOpen={false}
        isPlain={true}
        onSelect={[Function]}
        onToggle={[MockFunction]}
        position="right"
        toggle={
          <KebabToggle
            id="portfolio-item-actions-toggle"
            onToggle={[Function]}
          />
        }
      >
        <DropdownWithContext
          autoFocus={true}
          className=""
          direction="down"
          dropdownItems={
            Array [
              <DropdownItem
                aria-label="Edit Portfolio"
                component={
                  <CatalogLink
                    nav={false}
                    pathname="foo/baz"
                    preserveHash={false}
                    preserveSearch={true}
                    searchParams={Object {}}
                  >
                    Edit
                  </CatalogLink>
                }
                id="edit-portfolio-item"
                role="link"
              />,
              <DropdownItem
                aria-label="Copy Portfolio"
                component={
                  <CatalogLink
                    nav={false}
                    pathname="foo/copy"
                    preserveHash={false}
                    preserveSearch={true}
                    searchParams={Object {}}
                  >
                    Copy
                  </CatalogLink>
                }
                id="copy-portfolio-item"
                role="link"
              />,
              <DropdownItem
                aria-label="Set approval"
                component={
                  <CatalogLink
                    nav={false}
                    pathname="foo/workflow"
                    preserveHash={false}
                    preserveSearch={true}
                    searchParams={Object {}}
                  >
                    Set approval
                  </CatalogLink>
                }
                id="set-approval_workflow"
                role="link"
              />,
              <DropdownItem
                aria-label="Edit survey"
                component={
                  <CatalogLink
                    nav={false}
                    pathname="foo/edit-survey"
                    preserveHash={false}
                    preserveSearch={true}
                    searchParams={Object {}}
                  >
                    Edit survey
                  </CatalogLink>
                }
                id="edit-survey"
                role="link"
              />,
            ]
          }
          isGrouped={false}
          isOpen={false}
          isPlain={true}
          menuAppendTo="inline"
          onSelect={[Function]}
          onToggle={[MockFunction]}
          position="right"
          toggle={
            <KebabToggle
              id="portfolio-item-actions-toggle"
              onToggle={[Function]}
            />
          }
        >
          <div
            className="pf-c-dropdown pf-m-align-right"
            data-ouia-component-id={1}
            data-ouia-component-type="PF4/Dropdown"
            data-ouia-safe={true}
            onToggle={[MockFunction]}
          >
            <KebabToggle
              aria-haspopup={true}
              getMenuRef={[Function]}
              id="portfolio-item-actions-toggle"
              isOpen={false}
              isPlain={true}
              key=".0"
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown pf-m-align-right"
                    data-ouia-component-id="1"
                    data-ouia-component-type="PF4/Dropdown"
                    data-ouia-safe="true"
                  >
                    <button
                      aria-expanded="false"
                      aria-haspopup="true"
                      aria-label="Actions"
                      class="pf-c-dropdown__toggle pf-m-plain"
                      id="portfolio-item-actions-toggle"
                      type="button"
                    >
                      <svg
                        aria-hidden="true"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 192 512"
                        width="1em"
                      >
                        <path
                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                          transform=""
                        />
                      </svg>
                    </button>
                  </div>,
                }
              }
            >
              <Toggle
                aria-haspopup={true}
                aria-label="Actions"
                bubbleEvent={false}
                className=""
                getMenuRef={[Function]}
                id="portfolio-item-actions-toggle"
                isActive={false}
                isDisabled={false}
                isOpen={false}
                isPlain={true}
                isPrimary={false}
                isSplitButton={false}
                onEnter={[Function]}
                onToggle={[Function]}
                parentRef={
                  Object {
                    "current": <div
                      class="pf-c-dropdown pf-m-align-right"
                      data-ouia-component-id="1"
                      data-ouia-component-type="PF4/Dropdown"
                      data-ouia-safe="true"
                    >
                      <button
                        aria-expanded="false"
                        aria-haspopup="true"
                        aria-label="Actions"
                        class="pf-c-dropdown__toggle pf-m-plain"
                        id="portfolio-item-actions-toggle"
                        type="button"
                      >
                        <svg
                          aria-hidden="true"
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style="vertical-align: -0.125em;"
                          viewBox="0 0 192 512"
                          width="1em"
                        >
                          <path
                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                            transform=""
                          />
                        </svg>
                      </button>
                    </div>,
                  }
                }
              >
                <button
                  aria-expanded={false}
                  aria-haspopup={true}
                  aria-label="Actions"
                  className="pf-c-dropdown__toggle pf-m-plain"
                  disabled={false}
                  id="portfolio-item-actions-toggle"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  type="button"
                >
                  <EllipsisVIcon
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                  >
                    <svg
                      aria-hidden={true}
                      aria-labelledby={null}
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 192 512"
                      width="1em"
                    >
                      <path
                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                        transform=""
                      />
                    </svg>
                  </EllipsisVIcon>
                </button>
              </Toggle>
            </KebabToggle>
          </div>
        </DropdownWithContext>
      </Dropdown>
    </div>
  </LevelItem>
</DetailToolbarActions>
`;
