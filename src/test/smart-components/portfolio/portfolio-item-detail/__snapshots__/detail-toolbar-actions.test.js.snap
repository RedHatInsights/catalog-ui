// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DetailToolbarActions /> should render correctly 1`] = `
<DetailToolbarActions
  copyUrl="foo/copy"
  editUrl="foo/baz"
  isFetching={false}
  isOpen={false}
  orderUrl="foo/bar"
  setOpen={[MockFunction]}
>
  <LevelItem>
    <div>
      <Link
        disabled={false}
        to={
          Object {
            "pathname": "foo/bar",
            "search": "",
          }
        }
      >
        <LinkAnchor
          disabled={false}
          href="foo/bar"
          navigate={[Function]}
        >
          <a
            disabled={false}
            href="foo/bar"
            onClick={[Function]}
          >
            <ButtonWithSpinner
              isDisabled={false}
              showSpinner={false}
              variant="primary"
            >
              <Component
                className=""
                isDisabled={false}
                variant="primary"
              >
                <ComponentWithOuia
                  component={[Function]}
                  componentProps={
                    Object {
                      "children": Array [
                        <span>
                          Order
                        </span>,
                        false,
                      ],
                      "className": "",
                      "isDisabled": false,
                      "variant": "primary",
                    }
                  }
                  consumerContext={null}
                >
                  <Button
                    className=""
                    isDisabled={false}
                    ouiaContext={
                      Object {
                        "isOuia": false,
                        "ouiaId": null,
                      }
                    }
                    variant="primary"
                  >
                    <button
                      aria-disabled={null}
                      aria-label={null}
                      className="pf-c-button pf-m-primary"
                      disabled={false}
                      tabIndex={null}
                      type="button"
                    >
                      <span>
                        Order
                      </span>
                    </button>
                  </Button>
                </ComponentWithOuia>
              </Component>
            </ButtonWithSpinner>
          </a>
        </LinkAnchor>
      </Link>
    </div>
  </LevelItem>
  <LevelItem
    style={
      Object {
        "marginLeft": 16,
      }
    }
  >
    <div
      style={
        Object {
          "marginLeft": 16,
        }
      }
    >
      <Dropdown
        dropdownItems={
          Array [
            <DropdownItem
              aria-label="Edit Portfolio"
              component={
                <ForwardRef
                  to={
                    Object {
                      "pathname": "foo/baz",
                      "search": "",
                    }
                  }
                >
                  Edit
                </ForwardRef>
              }
              role="link"
            />,
            <DropdownItem
              aria-label="Copy Portfolio"
              component={
                <ForwardRef
                  to={
                    Object {
                      "pathname": "foo/copy",
                      "search": "",
                    }
                  }
                >
                  Copy
                </ForwardRef>
              }
              role="link"
            />,
            <DropdownItem
              aria-label="Set approval workflow"
              component={
                <ForwardRef
                  to={
                    Object {
                      "pathname": undefined,
                      "search": "",
                    }
                  }
                >
                  Set approval
                </ForwardRef>
              }
              role="link"
            />,
          ]
        }
        isOpen={false}
        isPlain={true}
        onSelect={[Function]}
        onToggle={[MockFunction]}
        position="right"
        toggle={
          <KebabToggle
            onToggle={[Function]}
          />
        }
      >
        <Component
          dropdownItems={
            Array [
              <DropdownItem
                aria-label="Edit Portfolio"
                component={
                  <ForwardRef
                    to={
                      Object {
                        "pathname": "foo/baz",
                        "search": "",
                      }
                    }
                  >
                    Edit
                  </ForwardRef>
                }
                role="link"
              />,
              <DropdownItem
                aria-label="Copy Portfolio"
                component={
                  <ForwardRef
                    to={
                      Object {
                        "pathname": "foo/copy",
                        "search": "",
                      }
                    }
                  >
                    Copy
                  </ForwardRef>
                }
                role="link"
              />,
              <DropdownItem
                aria-label="Set approval workflow"
                component={
                  <ForwardRef
                    to={
                      Object {
                        "pathname": undefined,
                        "search": "",
                      }
                    }
                  >
                    Set approval
                  </ForwardRef>
                }
                role="link"
              />,
            ]
          }
          isOpen={false}
          isPlain={true}
          onToggle={[MockFunction]}
          position="right"
          toggle={
            <KebabToggle
              onToggle={[Function]}
            />
          }
        >
          <ComponentWithOuia
            component={[Function]}
            componentProps={
              Object {
                "dropdownItems": Array [
                  <DropdownItem
                    aria-label="Edit Portfolio"
                    component={
                      <ForwardRef
                        to={
                          Object {
                            "pathname": "foo/baz",
                            "search": "",
                          }
                        }
                      >
                        Edit
                      </ForwardRef>
                    }
                    role="link"
                  />,
                  <DropdownItem
                    aria-label="Copy Portfolio"
                    component={
                      <ForwardRef
                        to={
                          Object {
                            "pathname": "foo/copy",
                            "search": "",
                          }
                        }
                      >
                        Copy
                      </ForwardRef>
                    }
                    role="link"
                  />,
                  <DropdownItem
                    aria-label="Set approval workflow"
                    component={
                      <ForwardRef
                        to={
                          Object {
                            "pathname": undefined,
                            "search": "",
                          }
                        }
                      >
                        Set approval
                      </ForwardRef>
                    }
                    role="link"
                  />,
                ],
                "isOpen": false,
                "isPlain": true,
                "onToggle": [MockFunction],
                "position": "right",
                "toggle": <KebabToggle
                  onToggle={[Function]}
                />,
              }
            }
            consumerContext={null}
          >
            <DropdownWithContext
              autoFocus={true}
              className=""
              direction="down"
              dropdownItems={
                Array [
                  <DropdownItem
                    aria-label="Edit Portfolio"
                    component={
                      <ForwardRef
                        to={
                          Object {
                            "pathname": "foo/baz",
                            "search": "",
                          }
                        }
                      >
                        Edit
                      </ForwardRef>
                    }
                    role="link"
                  />,
                  <DropdownItem
                    aria-label="Copy Portfolio"
                    component={
                      <ForwardRef
                        to={
                          Object {
                            "pathname": "foo/copy",
                            "search": "",
                          }
                        }
                      >
                        Copy
                      </ForwardRef>
                    }
                    role="link"
                  />,
                  <DropdownItem
                    aria-label="Set approval workflow"
                    component={
                      <ForwardRef
                        to={
                          Object {
                            "pathname": undefined,
                            "search": "",
                          }
                        }
                      >
                        Set approval
                      </ForwardRef>
                    }
                    role="link"
                  />,
                ]
              }
              isGrouped={false}
              isOpen={false}
              isPlain={true}
              onSelect={[Function]}
              onToggle={[MockFunction]}
              ouiaComponentType="Dropdown"
              ouiaContext={
                Object {
                  "isOuia": false,
                  "ouiaId": null,
                }
              }
              position="right"
              toggle={
                <KebabToggle
                  onToggle={[Function]}
                />
              }
            >
              <div
                className="pf-c-dropdown"
                onToggle={[MockFunction]}
              >
                <KebabToggle
                  ariaHasPopup={true}
                  id="pf-toggle-id-0"
                  isOpen={false}
                  isPlain={true}
                  key=".0"
                  onEnter={[Function]}
                  onToggle={[Function]}
                  parentRef={
                    Object {
                      "current": <div
                        class="pf-c-dropdown"
                      >
                        <button
                          aria-expanded="false"
                          aria-haspopup="true"
                          aria-label="Actions"
                          class="pf-c-dropdown__toggle pf-m-plain"
                          id="pf-toggle-id-0"
                          type="button"
                        >
                          <svg
                            aria-hidden="true"
                            fill="currentColor"
                            height="1em"
                            role="img"
                            style="vertical-align: -0.125em;"
                            viewBox="0 0 192 512"
                            width="1em"
                          >
                            <path
                              d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                              transform=""
                            />
                          </svg>
                        </button>
                      </div>,
                    }
                  }
                >
                  <Toggle
                    aria-label="Actions"
                    ariaHasPopup={true}
                    className=""
                    id="pf-toggle-id-0"
                    isActive={false}
                    isDisabled={false}
                    isFocused={false}
                    isHovered={false}
                    isOpen={false}
                    isPlain={true}
                    isPrimary={false}
                    isSplitButton={false}
                    onEnter={[Function]}
                    onToggle={[Function]}
                    parentRef={
                      Object {
                        "current": <div
                          class="pf-c-dropdown"
                        >
                          <button
                            aria-expanded="false"
                            aria-haspopup="true"
                            aria-label="Actions"
                            class="pf-c-dropdown__toggle pf-m-plain"
                            id="pf-toggle-id-0"
                            type="button"
                          >
                            <svg
                              aria-hidden="true"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style="vertical-align: -0.125em;"
                              viewBox="0 0 192 512"
                              width="1em"
                            >
                              <path
                                d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                transform=""
                              />
                            </svg>
                          </button>
                        </div>,
                      }
                    }
                  >
                    <button
                      aria-expanded={false}
                      aria-haspopup={true}
                      aria-label="Actions"
                      className="pf-c-dropdown__toggle pf-m-plain"
                      disabled={false}
                      id="pf-toggle-id-0"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      type="button"
                    >
                      <EllipsisVIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      >
                        <svg
                          aria-hidden={true}
                          aria-labelledby={null}
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style={
                            Object {
                              "verticalAlign": "-0.125em",
                            }
                          }
                          viewBox="0 0 192 512"
                          width="1em"
                        >
                          <path
                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                            transform=""
                          />
                        </svg>
                      </EllipsisVIcon>
                    </button>
                  </Toggle>
                </KebabToggle>
              </div>
            </DropdownWithContext>
          </ComponentWithOuia>
        </Component>
      </Dropdown>
    </div>
  </LevelItem>
</DetailToolbarActions>
`;
