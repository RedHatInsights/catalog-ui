/**
 * Service Portal API
 * This is a API to fetch and order catalog items from different cloud sources
 *
 * OpenAPI spec version: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ServicePortalApi);
  }
}(this, function(expect, ServicePortalApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ServicePortalApi.UsersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsersApi', function() {
    describe('addToOrder', function() {
      it('should call addToOrder successfully', function(done) {
        //uncomment below and update the code to test addToOrder
        //instance.addToOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogItems', function() {
      it('should call catalogItems successfully', function(done) {
        //uncomment below and update the code to test catalogItems
        //instance.catalogItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogPlanParameters', function() {
      it('should call catalogPlanParameters successfully', function(done) {
        //uncomment below and update the code to test catalogPlanParameters
        //instance.catalogPlanParameters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogPlanSchema', function() {
      it('should call catalogPlanSchema successfully', function(done) {
        //uncomment below and update the code to test catalogPlanSchema
        //instance.catalogPlanSchema(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fetchCatalogItemWithProvider', function() {
      it('should call fetchCatalogItemWithProvider successfully', function(done) {
        //uncomment below and update the code to test fetchCatalogItemWithProvider
        //instance.fetchCatalogItemWithProvider(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fetchCatalogItemWithProviderAndCatalogID', function() {
      it('should call fetchCatalogItemWithProviderAndCatalogID successfully', function(done) {
        //uncomment below and update the code to test fetchCatalogItemWithProviderAndCatalogID
        //instance.fetchCatalogItemWithProviderAndCatalogID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fetchPlansWithPortfolioItemId', function() {
      it('should call fetchPlansWithPortfolioItemId successfully', function(done) {
        //uncomment below and update the code to test fetchPlansWithPortfolioItemId
        //instance.fetchPlansWithPortfolioItemId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fetchPlansWithProviderAndCatalogID', function() {
      it('should call fetchPlansWithProviderAndCatalogID successfully', function(done) {
        //uncomment below and update the code to test fetchPlansWithProviderAndCatalogID
        //instance.fetchPlansWithProviderAndCatalogID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fetchPortfolioItemFromPortfolio', function() {
      it('should call fetchPortfolioItemFromPortfolio successfully', function(done) {
        //uncomment below and update the code to test fetchPortfolioItemFromPortfolio
        //instance.fetchPortfolioItemFromPortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fetchPortfolioItemsWithPortfolio', function() {
      it('should call fetchPortfolioItemsWithPortfolio successfully', function(done) {
        //uncomment below and update the code to test fetchPortfolioItemsWithPortfolio
        //instance.fetchPortfolioItemsWithPortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fetchPortfolioWithId', function() {
      it('should call fetchPortfolioWithId successfully', function(done) {
        //uncomment below and update the code to test fetchPortfolioWithId
        //instance.fetchPortfolioWithId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listOrderItem', function() {
      it('should call listOrderItem successfully', function(done) {
        //uncomment below and update the code to test listOrderItem
        //instance.listOrderItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listOrderItems', function() {
      it('should call listOrderItems successfully', function(done) {
        //uncomment below and update the code to test listOrderItems
        //instance.listOrderItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listOrders', function() {
      it('should call listOrders successfully', function(done) {
        //uncomment below and update the code to test listOrders
        //instance.listOrders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPortfolioItems', function() {
      it('should call listPortfolioItems successfully', function(done) {
        //uncomment below and update the code to test listPortfolioItems
        //instance.listPortfolioItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPortfolios', function() {
      it('should call listPortfolios successfully', function(done) {
        //uncomment below and update the code to test listPortfolios
        //instance.listPortfolios(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listProgressMessages', function() {
      it('should call listProgressMessages successfully', function(done) {
        //uncomment below and update the code to test listProgressMessages
        //instance.listProgressMessages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
